apply plugin: 'java'

// select a source-code option
//sourceCompatibility = '1.6'
//sourceCompatibility = '1.7'
sourceCompatibility = '1.8'

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << '-Xlint:unchecked'
        options.deprecation = true
        options.encoding = 'UTF-8'
    }
    tasks.withType(JavaExec) {
        args = []
        classpath sourceSets.main.runtimeClasspath
        //debug true
        enableAssertions true
        jvmArgs '-XX:+UseConcMarkSweepGC'
    }
}

// select a version of the Engine
//ext.jmonkeyengineVersion = '3.1.0-stable' // from jcenter
//ext.jmonkeyengineVersion = '3.2.0-stable' // from jcenter
ext.jmonkeyengineVersion = '3.2.1-stable' // from jcenter
//ext.jmonkeyengineVersion = '3.2.0-SNAPSHOT' // from mavenLocal

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = 'mygame.Main'
}

repositories {
    //mavenLocal()
    jcenter()
    //maven { url 'http://nifty-gui.sourceforge.net/nifty-maven-repo' }
    //maven { url 'https://dl.bintray.com/stephengold/org.jmonkeyengine' }
    //mavenCentral()
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   https://docs.gradle.org/current/userguide/dependency_management.html#sec:repositories
}

dependencies {
    // You can read more about how to add dependencies here:
    //   https://docs.gradle.org/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies

    // from jcenter (or mavenLocal) repositories:
    compile "org.jmonkeyengine:jme3-core:${jmonkeyengineVersion}"
    runtime "org.jmonkeyengine:jme3-blender:${jmonkeyengineVersion}"
    //compile "org.jmonkeyengine:jme3-bullet:${jmonkeyengineVersion}"
    //runtime "org.jmonkeyengine:jme3-bullet-native:${jmonkeyengineVersion}"
    runtime "org.jmonkeyengine:jme3-desktop:${jmonkeyengineVersion}"
    //compile "org.jmonkeyengine:jme3-effects:${jmonkeyengineVersion}"
    runtime "org.jmonkeyengine:jme3-jogg:${jmonkeyengineVersion}"
    //compile "org.jmonkeyengine:jme3-jogl:${jmonkeyengineVersion}"
    //compile "org.jmonkeyengine:jme3-networking:${jmonkeyengineVersion}"
    //compile "org.jmonkeyengine:jme3-niftygui:${jmonkeyengineVersion}"
    runtime "org.jmonkeyengine:jme3-plugins:${jmonkeyengineVersion}"
    //compile "org.jmonkeyengine:jme3-terrain:${jmonkeyengineVersion}"

    // select a version of LWJGL (from jcenter or mavenLocal)
    compile "org.jmonkeyengine:jme3-lwjgl:${jmonkeyengineVersion}"
    //compile "org.jmonkeyengine:jme3-lwjgl3:${jmonkeyengineVersion}"

    // from stephengold's bintray repositories:
    //runtime 'org.jmonkeyengine:jme3-testdata:3.1.0-stable'
}

// cleanup tasks
clean { dependsOn 'cleanDLLs' }
task cleanDLLs(type: Delete) {
    delete fileTree(dir: '.', include: '*.dll')
}
