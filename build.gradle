// Gradle script to build the BasicGame-on-Gradle project

plugins {
    id 'application' // to build JVM applications
}

java {
    // select one version of Java for source code:
    sourceCompatibility = JavaVersion.VERSION_11
    //sourceCompatibility = JavaVersion.VERSION_17
    //sourceCompatibility = JavaVersion.VERSION_21

    // select one version of Java for class files:
    targetCompatibility = JavaVersion.VERSION_11
    //targetCompatibility = JavaVersion.VERSION_17
    //targetCompatibility = JavaVersion.VERSION_21
}

application {
    mainClass = 'mygame.Main'
}

tasks.withType(JavaCompile).configureEach { // Java compile-time options:
    options.compilerArgs << '-Xdiags:verbose'
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true // to provide detailed deprecation warnings
    options.encoding = 'UTF-8'
    if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_1_10)) {
        options.release = 8
    }
}

import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform
Boolean isMacOS = DefaultNativePlatform.currentOperatingSystem.isMacOsX()

tasks.withType(JavaExec).configureEach { // Java runtime options:
    if (isMacOS) {
        jvmArgs '-XstartOnFirstThread'
    }
    classpath sourceSets.main.runtimeClasspath
    enableAssertions true
    //jvmArgs '-verbose:gc'
    //jvmArgs '-Xbatch'
    //jvmArgs '-Xms256m', '-Xmx256m' // to enlarge the Java heap
    //jvmArgs '-XX:+PrintCompilation'
    //jvmArgs '-XX:+UseG1GC', '-XX:MaxGCPauseMillis=10'
}

configurations.configureEach {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds' // to disable caching of snapshots
}

dependencies {
    // You can read more about how to add dependencies here:
    // https://docs.gradle.org/current/userguide/dependency_management.html#declaring-dependencies

    // from mavenCentral (or mavenLocal) repositories:
    implementation(libs.jme3.core)
    implementation(libs.jme3.desktop)
    //implementation(libs.jme3.effects)
    //implementation(libs.jme3.networking)
    //implementation(libs.jme3.niftygui)
    //implementation(libs.jme3.terrain)
    //runtimeOnly(libs.jme3.awt.dialogs) // only for JMonkeyEngine v3.6 or later!

    // select one version of LWJGL (from mavenCentral or mavenLocal)
    //runtimeOnly(libs.jme3.lwjgl) // LWJGL 2.x
    runtimeOnly(libs.jme3.lwjgl3) // LWJGL 3.x

    // BasicGame doesn't use physics. If your game needs physics, select either:
    //    1. Minie
    //implementation(libs.minie)
    // OR
    //    2. jme3-jbullet
    //implementation(libs.jme3.jbullet)

    // BasicGame doesn't use jme3-jogg nor jme3-plugins
    //  -- they are included solely to avoid warnings from AssetConfig.
    runtimeOnly(libs.jme3.jogg)
    runtimeOnly(libs.jme3.plugins)

    // libraries related to the Lemur GUI and Groovy:
    //implementation(libs.lemur)
    //implementation(libs.lemur.props)
    //implementation(libs.lemur.proto)
    //runtimeOnly(libs.groovy.jsr223)

    // other add-on libraries:
    //implementation(libs.blocks)
    //implementation(libs.heart)
    //implementation(libs.jmePower)
    //implementation(libs.sim.math)
    //implementation(libs.skyControl)
    //runtimeOnly(libs.jme3.testdata)
}

// Register cleanup tasks:

clean.dependsOn('cleanDLLs', 'cleanDyLibs', 'cleanLogs', 'cleanSOs')

tasks.register('cleanDLLs', Delete) { // extracted Windows native libraries
    delete fileTree(dir: '.', include: '*.dll')
}
tasks.register('cleanDyLibs', Delete) { // extracted macOS native libraries
    delete fileTree(dir: '.', include: '*.dylib')
}
tasks.register('cleanLogs', Delete) { // JVM crash logs
    delete fileTree(dir: '.', include: 'hs_err_pid*.log')
}
tasks.register('cleanSOs', Delete) { // extracted Linux and Android native libraries
    delete fileTree(dir: '.', include: '*.so')
}